name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  
env:
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            librsvg2-dev \
            patchelf \
            libgtk-3-dev
          # Try to install appindicator (use ayatana if available, fallback to older version)
          sudo apt-get install -y libayatana-appindicator3-dev || sudo apt-get install -y libappindicator3-dev
            
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri
            src-helper
            
      - name: Install frontend dependencies
        run: pnpm install
        
      - name: Build helper binary
        run: |
          cd src-helper
          cargo build --release
          
      - name: Lint TypeScript
        run: pnpm lint || true
        
      - name: Check TypeScript
        run: pnpm tsc --noEmit || true
        
      - name: Rust format check
        run: |
          cd src-tauri
          cargo fmt -- --check
        continue-on-error: true
        
      - name: Rust clippy
        run: |
          cd src-tauri
          cargo clippy -- -D warnings
        continue-on-error: true
        
      - name: Run Rust tests
        run: |
          cd src-helper
          cargo test
          cd ../src-tauri
          cargo test
          
      - name: Build Tauri app (test only)
        run: |
          cd src-tauri
          cargo build